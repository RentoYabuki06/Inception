version: '3.8'

# 依存関係的にmariadb→wordpress→nginxの順番でコンテナ起動
services:
  nginx:
    build:
      context: ./requirements/nginx # Dockerfile内のCOPYやADDで参照できる範囲を指定
      dockerfile: Dockerfile
    restart: always
    volumes:
      - /home/${LOGIN}/data/wordpress:/var/www/html
      # - ../secrets:/etc/ssl/private:ro
    ports:
      - "443:443"
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    networks:
      - inception_network
    depends_on:
      - wordpress

  mariadb:
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    restart: always
    environment: # 初期DB構築用の値を*.envから注入
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - /home/${LOGIN}/data/mariadb:/var/lib/mysql
    networks:
      - inception_network

  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - mariadb
    environment:
      - WORDPRESS_DB_HOST=mariadb # 仮想ネットワーク上ではサービス名が自動でDNS登録される
      - WORDPRESS_DB_NAME=${MYSQL_DATABASE}
      - WORDPRESS_DB_USER=${MYSQL_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
      - WP_ADMIN_USER=${WP_ADMIN_USER}
      - WP_ADMIN_PASSWORD=${WP_ADMIN_PASSWORD}
      - WP_ADMIN_EMAIL=${WP_ADMIN_EMAIL}
      - WP_USER=${WP_USER}
      - WP_USER_PASSWORD=${WP_USER_PASSWORD}
      - WP_USER_EMAIL=${WP_USER_EMAIL}
      - DOMAIN_NAME=${DOMAIN_NAME}
    volumes:
      - /home/${LOGIN}/data/wordpress:/var/www/html # nginxと同じ参照先
    networks:
      - inception_network

networks:
  inception_network:
    driver: bridge 
